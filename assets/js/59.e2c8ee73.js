(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{341:function(t,a,s){"use strict";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"if-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-语句"}},[t._v("#")]),t._v(" if 语句")]),t._v(" "),a("p",[a("strong",[t._v("if")]),t._v("\nif xxx {")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[a("strong",[t._v("if else")]),t._v("\nif xxx {")]),t._v(" "),a("p",[t._v("} else if xxx {")]),t._v(" "),a("p",[t._v("} else {")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[t._v("if 条件中申明的变量为 if 块中的局部变量")]),t._v(" "),a("h2",{attrs:{id:"for-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-循环"}},[t._v("#")]),t._v(" for 循环")]),t._v(" "),a("p",[t._v("for i := 1; i < 10; i++ {")]),t._v(" "),a("p",[t._v("}")]),t._v(" "),a("p",[a("strong",[t._v("无限循环 break 跳出循环")]),t._v("\ngo 中没有 wheel 语句")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("练习")])]),t._v(" "),a("ul",[a("li",[t._v("打印 0-50 所有偶数")]),t._v(" "),a("li",[t._v("求1到100的和")])]),t._v(" "),a("h2",{attrs:{id:"for-range-循环-键值循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-range-循环-键值循环"}},[t._v("#")]),t._v(" for range 循环（键值循环）")]),t._v(" "),a("p",[t._v("用于循环数组、切片、字符串、map、通道")]),t._v(" "),a("p",[t._v("语法\nfor key, value := range xxx {}")]),t._v(" "),a("h2",{attrs:{id:"switch-case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch-case"}},[t._v("#")]),t._v(" switch case")]),t._v(" "),a("p",[t._v("switch 语句上同样可以声明变量，声明的变量为局部变量\ngo 中 switch 语句中的 break 可以不写")]),t._v(" "),a("p",[t._v("switch xxx {\ncase flag:\n----\nbreak\ncase flag:\n----\nbreak\n}")]),t._v(" "),a("p",[t._v("fallthrough 穿透到下一个条件语句（基本用不到）")]),t._v(" "),a("h2",{attrs:{id:"for-循环-label-和-countinue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-循环-label-和-countinue"}},[t._v("#")]),t._v(" for 循环 label 和 countinue")]),t._v(" "),a("h2",{attrs:{id:"goto-label-跳转到指定代码位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#goto-label-跳转到指定代码位置"}},[t._v("#")]),t._v(" goto label 跳转到指定代码位置")])])}),[],!1,null,null,null);a.default=r.exports}}]);