(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{334:function(a,t,s){"use strict";s.r(t);var n=s(14),r=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[t("strong",[a._v("指针类型")])]),a._v(" "),t("p",[a._v("在 go 中，给普通类型前面添加一个 * 表示指针类型")]),a._v(" "),t("p",[a._v("*int 表示 int 类型的指针\n*string 表示 字符串类型的指针")]),a._v(" "),t("p",[t("strong",[a._v("指针")])]),a._v(" "),t("p",[a._v("在 go 中，如果想要取某个变量的指针，可以通过 &变量名 的方式")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 取 a 的指针")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" aPoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("a\n")])])]),t("p",[t("strong",[a._v("获取指针中的值")])]),a._v(" "),t("p",[a._v("可以通过 *指针 的方式取出指针中的值，除此之外。通过 *指针 也可以直接改变指针中的值。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[a._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\naPoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("a\naValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("aPoint "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// aValue = 2")]),a._v("\n")])])]),t("p",[a._v("通过指针改变其中的值")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[a._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\naPoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("a\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("aPoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\nfmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 10")]),a._v("\n")])])]),t("h2",{attrs:{id:"new-和-make"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-和-make"}},[a._v("#")]),a._v(" new 和 make")]),a._v(" "),t("p",[a._v("new 用来创建一个指针，并开辟其指向的内存空间。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[a._v("aPoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// *int; *aPoint = 0")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);