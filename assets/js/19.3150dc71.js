(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{291:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("p",[t._v("问：eslint 是干嘛的？")]),t._v(" "),s("p",[t._v("答：根据制定的规则来检查你的 ECMAScript/JavaScript 代码，能对不符合规则的代码进行提示和一键修复功能（这里的规则可以是 eslint 内置的规则，也可以是自定义的规则）")]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("eslint 需要 Node.js 版本（^12.22.0、^14.17.0 或 >=16.0.0）")])]),t._v(" "),s("p",[t._v("安装 eslint 的两种方式：")]),t._v(" "),s("h4",{attrs:{id:"自动安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动安装"}},[t._v("#")]),t._v(" 自动安装")]),t._v(" "),s("p",[t._v("通过官方提供的 "),s("code",[t._v("@eslint/create-config")]),t._v(" 脚本（cli 也好）交互式的方式进行 eslint 的安装和配置文件的自动生成。通过这种方式，你将会得到最新的 eslint 包和一份你自己选择的 eslint 配置文件。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init @eslint/config\n")])])]),s("p",[t._v("这里你可能对 "),s("code",[t._v("npm init")]),t._v(" 这个命令有些疑惑，如果想要了解更多关于 "),s("code",[t._v("npm init")]),t._v(" 相关内容，可以阅读 "),s("a",{attrs:{href:"https://docs.npmjs.com/cli/v6/commands/npm-init",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm Docs"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("npm init @eslint/config")]),t._v("，你可以直接理解成 npm 会给我们执行 "),s("code",[t._v("npx @eslint/create-config")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"手动安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动安装"}},[t._v("#")]),t._v(" 手动安装")]),t._v(" "),s("ol",[s("li",[t._v("安装 eslint")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" eslint "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("新增 eslint 配置文件 "),s("code",[t._v(".eslintrc.js")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" .eslintrc.js\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("增加一些配置到 "),s("code",[t._v(".eslintrc.js")]),t._v(" 中")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("browser")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("es2021")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint:recommended'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parserOptions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ecmaVersion")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latest'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sourceType")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# filepath 为指定的文件，告诉 eslint 需要检查那个文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# eslint 会检测该文件中的代码内容是否符合配置文件中定义的规则，然后将检查结果输出到命令行")]),t._v("\nnpx eslint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("简单了解了 "),s("code",[t._v("eslint")]),t._v(" 的安装和使用之后，我们接下来就深入到 "),s("code",[t._v("eslint")]),t._v(" 的配置中去。它是 "),s("code",[t._v("eslint")]),t._v(" 的核心，它将告诉 "),s("code",[t._v("eslint")]),t._v(" 如何去检查我们的代码。")]),t._v(" "),s("h2",{attrs:{id:"配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),s("h3",{attrs:{id:"配置文件格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件格式"}},[t._v("#")]),t._v(" 配置文件格式")]),t._v(" "),s("p",[s("code",[t._v("eslint")]),t._v(" 支持单文件配置 "),s("code",[t._v(".eslintrc.<js | cjs | yaml | yml | json>")]),t._v("，以及内嵌到 "),s("code",[t._v("package.json")]),t._v("配置。对于不同格式，"),s("code",[t._v("eslint")]),t._v(" 的读取优先级如下")]),t._v(" "),s("ul",[s("li",[t._v(".eslintrc.js")]),t._v(" "),s("li",[t._v(".eslintrc.cjs")]),t._v(" "),s("li",[t._v(".eslintrc.yaml")]),t._v(" "),s("li",[t._v(".eslintrc.yml")]),t._v(" "),s("li",[t._v(".eslint.json")]),t._v(" "),s("li",[t._v("package.json")])]),t._v(" "),s("h3",{attrs:{id:"eslint-读取配置文件规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint-读取配置文件规则"}},[t._v("#")]),t._v(" eslint 读取配置文件规则")]),t._v(" "),s("p",[s("code",[t._v("eslint")]),t._v(" 会从需要检查的文件目录下开始查找 "),s("code",[t._v(".eslintrc.*")]),t._v(" 和 "),s("code",[t._v("package.json")]),t._v(" 文件。如果没有找到，会开始向父目录进行查找，直到找到文件系统根目录或则指定了 "),s("code",[t._v("root: true")]),t._v(" 时停止。")]),t._v(" "),s("p",[t._v("你也可以通过命令行参数 "),s("code",[t._v("--config")]),t._v(" 手动指定具体的配置文件。")]),t._v(" "),s("h3",{attrs:{id:"扩展配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展配置"}},[t._v("#")]),t._v(" 扩展配置")]),t._v(" "),s("p",[t._v("针对不同项目的 "),s("code",[t._v("eslint")]),t._v(" 配置，我们不可能每次都需要自己配置。因为它们大多情况下都是相同的，这时我们便可以通过 "),s("code",[t._v("eslint")]),t._v(" 提供的 "),s("code",[t._v("extends")]),t._v(" 配置项来扩展我们的配置。它会继承我们指定好的所有配置（规则、插件和语言选项）。")]),t._v(" "),s("p",[s("code",[t._v("extends")]),t._v(" 值类型：")]),t._v(" "),s("ul",[s("li",[t._v("【字符】具体的文件路径或发布到 "),s("code",[t._v("npm")]),t._v(" 上的包名称（如 "),s("code",[t._v("airbnb")]),t._v("，包名称规则为 "),s("code",[t._v("eslint-config-*")]),t._v("，使用 "),s("code",[t._v("extends")]),t._v(" 可以省略前缀 "),s("code",[t._v("eslint-config-")]),t._v("。）")]),t._v(" "),s("li",[t._v("【字符数组】同上（多个扩展，再遇到冲突规则时，后面的扩展会覆盖掉前面的扩展）")])]),t._v(" "),s("p",[t._v("如果继承的规则与配置文件中的规则发生冲突，配置文件的规则优先级更高")]),t._v(" "),s("h2",{attrs:{id:"配置之语言特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置之语言特性"}},[t._v("#")]),t._v(" 配置之语言特性")]),t._v(" "),s("h3",{attrs:{id:"env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[t._v("#")]),t._v(" env")]),t._v(" "),s("p",[t._v("总所周知，我们的代码可以运行在不同的环境中。而不同的环境会给我提供不同的全局变量，如在浏览器环境中。我们能够使用 "),s("code",[t._v("window")]),t._v("，而在其他环境中这个全局变量将不存在。而 "),s("code",[t._v("eslint")]),t._v(" 并不知道我们的代码运行在什么环境中，拥有那些全局变量，所以这时候就需要一个配置项来告诉 "),s("code",[t._v("eslint")]),t._v(" 我们的代码会运行在什么环境中。而这个配置就是 "),s("code",[t._v("env")])]),t._v(" "),s("p",[s("code",[t._v("env")]),t._v(" 值选项")]),t._v(" "),s("ul",[s("li",[t._v("browser")]),t._v(" "),s("li",[t._v("node")]),t._v(" "),s("li",[t._v("commonjs")]),t._v(" "),s("li",[t._v("es6")]),t._v(" "),s("li",[t._v("es2016")]),t._v(" "),s("li",[t._v("es2017")]),t._v(" "),s("li",[t._v("... （如果想了解更多，可以参考 "),s("a",{attrs:{href:"https://eslint.org/docs/latest/use/configure/language-options",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint 文档"),s("OutboundLink")],1),t._v("）")])]),t._v(" "),s("p",[t._v("除了使用 "),s("code",[t._v("eslint")]),t._v(" 提供给我们的环境，我们也可以使用插件中的 env")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"example/custom"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果上述两种方式依然不能给你提供你想要的全局变量，你也可以通过 "),s("code",[t._v("globals")]),t._v(" 配置你想要的全局变量")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"globals"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"var1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"writable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"var2"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readonly"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Promise"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁用")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("p",[s("code",[t._v("env")]),t._v(" 告诉了 "),s("code",[t._v("eslint")]),t._v(" 我们代码环境中内置了哪些全局变量，而 "),s("code",[t._v("parserOptions")]),t._v(" 告诉了 "),s("code",[t._v("eslint")]),t._v(" 该用什么样的语法去检查我们的代码。默认 "),s("code",[t._v("eslint")]),t._v(" 使用的是 ECMAScript 5 的语法进行检查。\n"),s("code",[t._v("parserOptions")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[t._v("ecmaVersion 可选配置值 3、5（默认）、6、7、8...、（你也可以设置成 2015、2016）、latest（最新版）")]),t._v(" "),s("li",[t._v("sourceType 默认为 script、也可以是 module")]),t._v(" "),s("li",[t._v("allowReserved 是否允许使用 ES 保留字作为标识符（如果 ecmaVersion 为 3）")]),t._v(" "),s("li",[t._v("ecmaFeatures\n"),s("ul",[s("li",[t._v("globalReturn 允许全局范围内的 return 语句")]),t._v(" "),s("li",[t._v("impliedStrict - 启用全局严格模式（如果 ecmaVersion 是 5 或更高版本）")]),t._v(" "),s("li",[t._v("jsx - 启用 JSX")])])])]),t._v(" "),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parserOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ecmaVersion"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ecmaFeatures"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jsx"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"semi"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"配置之规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置之规则"}},[t._v("#")]),t._v(" 配置之规则")]),t._v(" "),s("p",[t._v("规则是 "),s("code",[t._v("eslint")]),t._v(" 的核心模块，它将告诉 "),s("code",[t._v("eslint")]),t._v(" 该如何去检查我们的代码。\n"),s("code",[t._v("eslint")]),t._v(" 拥有大量的"),s("a",{attrs:{href:"https://eslint.org/docs/latest/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("内置规则"),s("OutboundLink")],1),t._v("，这些规则如果你不进行任何配置的话，默认都是关闭的。当然你可以直接通过配置 "),s("code",[t._v("extends: 'eslint:recommended'")]),t._v(" 来直接开启所有 "),s("code",[t._v("eslint")]),t._v(" 推荐的规则。也可以去内置规则中选择你需要的规则进行手动开启和关闭。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("不推荐你使用 "),s("code",[t._v("extends: eslint:all")]),t._v(" 来开启所有的 "),s("code",[t._v("eslint")]),t._v(" 规则，虽然它能在一定程度上带来严格的规则校验，但它会随着你 "),s("code",[t._v("eslint")]),t._v(" 版本的变化而变化。对于不同版本的 "),s("code",[t._v("eslint")]),t._v(" ，它可能会拥有不同的规则（如新版本新增的规则、废弃的规则）")])]),t._v(" "),s("h3",{attrs:{id:"配置规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置规则"}},[t._v("#")]),t._v(" 配置规则")]),t._v(" "),s("p",[t._v("指定规则 ID 和规则对应的值（规则 ID 可以通过查看"),s("a",{attrs:{href:"https://eslint.org/docs/latest/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("内置规则"),s("OutboundLink")],1),t._v("进行获取）\n规则对应的值：")]),t._v(" "),s("ul",[s("li",[t._v('"off" 或 0 - 关闭规则')]),t._v(" "),s("li",[t._v('"warn" 或 1 - 启用并视作警告（不影响退出）。')]),t._v(" "),s("li",[t._v('"error" 或 2 - 启用并视作错误（触发时退出代码为 1）')])]),t._v(" "),s("h3",{attrs:{id:"插件规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件规则"}},[t._v("#")]),t._v(" 插件规则")]),t._v(" "),s("p",[s("code",[t._v("eslint")]),t._v(" 默认只支持 JS 的规则检查，对于一些特殊的文件（如 .vue）。这时候使用 "),s("code",[t._v("eslint")]),t._v(" 内置的规则就有点不够看了，"),s("code",[t._v("eslint")]),t._v(" 对于 vue 的规则和语法并没有很好的一个支持，针对这种情况，我们可以使用 eslint 插件中的规则")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eqeqeq"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"curly"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugin1/rule1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"禁用规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#禁用规则"}},[t._v("#")]),t._v(" 禁用规则")]),t._v(" "),s("p",[t._v("虽然我不推荐禁用 "),s("code",[t._v("eslint")]),t._v(" 的规则，但是在某些场景下它确实有必要的。关于如何禁用 "),s("code",[t._v("eslint")]),t._v(" 中的规则，可以查看 "),s("a",{attrs:{href:"https://eslint.org/docs/latest/use/configure/rules#disabling-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eslint 文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("简单示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable no-alert, no-console */")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-enable no-alert, no-console */")]),t._v("\n")])])]),s("h2",{attrs:{id:"配置之插件和解析器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置之插件和解析器"}},[t._v("#")]),t._v(" 配置之插件和解析器")]),t._v(" "),s("h3",{attrs:{id:"插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),s("p",[s("code",[t._v("eslint")]),t._v(" 支持第三方插件，它们遵循 "),s("code",[t._v("eslint")]),t._v(" 插件命名规范（以 eslint-plugin-开头）。在插件使用时，我们省略掉 eslint-plugin- 前缀。也可以不省略\n示例")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint-plugin-plugin2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("eslint")]),t._v(" 插件中可以包含自定义规则、配置、环境等\n示例")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件引入")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jquery"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-plugin-jquery")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@foo/foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @foo/eslint-plugin-foo")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@bar"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @bar/eslint-plugin")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用插件中的配置（如 eslint 内置规则的配置对象）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:@foo/foo/recommended"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:@bar/recommended"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用插件中的自定义规则")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jquery/a-rule"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@foo/foo/some-rule"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@bar/another-rule"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用插件中的环境（插件环境内置的全局变量）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jquery/jquery"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@foo/foo/env-foo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@bar/env-bar"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"解析器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析器"}},[t._v("#")]),t._v(" 解析器")]),t._v(" "),s("p",[s("code",[t._v("eslit")]),t._v(" 工作原理：我们知道，eslint 之所以能过对我们的代码进行检查，是因为它将我们的代码解析成了抽象语法（AST），如果不太了解抽象语法树，你可以简单理解成它使用一个 JavaScript 对象来描述我们的代码。然后通过分析抽象语法树，看它是否符合配置的规则。如果不符合再给出相应的提示。而解析器要做的事情就是将代码解析成 AST")]),t._v(" "),s("p",[t._v("默认情况下，"),s("code",[t._v("eslint")]),t._v(" 使用 "),s("a",{attrs:{href:"https://github.com/eslint/espree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Espree"),s("OutboundLink")],1),t._v("为")]),t._v(" "),s("p",[t._v("与 "),s("code",[t._v("eslint")]),t._v(" 兼容的解析器")]),t._v(" "),s("ul",[s("li",[t._v("Esprima")]),t._v(" "),s("li",[t._v("@babel/eslint-parser - 使 Babel 解析器与 ESLint 兼容的的包装器")]),t._v(" "),s("li",[t._v("@typescript-eslint/parser - 一个将 TypeScript 转换为与 ESTree 兼容的形式的解析器，因此它可以在 ESLint 中使用。")])]),t._v(" "),s("p",[t._v("自定义解析器示例")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parser"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"esprima"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"semi"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"配置之忽略文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置之忽略文件"}},[t._v("#")]),t._v(" 配置之忽略文件")]),t._v(" "),s("p",[s("code",[t._v("eslint")]),t._v(" 在不指定具体检查文件的情况下会对所有的文件进行检查，这种行为是愚蠢的。为了让它看起来不那么愚蠢，"),s("code",[t._v("eslint")]),t._v(" 给我们提供了 "),s("code",[t._v("ignorePatterns")]),t._v(" 配置项去配置该忽略那些文件的检查。当然你也可新建一个 "),s("code",[t._v(".eslintignore")]),t._v(" 文件来告诉 "),s("code",[t._v("eslint")]),t._v(" 该忽略掉哪些文件的检查，如果你不嫌麻烦的话。")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ignorePatterns"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temp.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/vendor/*.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果你想了解更多关于 "),s("code",[t._v("eslint")]),t._v(" 忽略文件的更多骚操作，你可以阅读它们提供的"),s("a",{attrs:{href:"https://eslint.org/docs/latest/use/configure/ignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eslint 文档"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"集成-vs-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集成-vs-code"}},[t._v("#")]),t._v(" 集成（VS Code）")]),t._v(" "),s("p",[t._v("在日常开发中，如果我们每次都需要通过命令行允许 "),s("code",[t._v("eslint")]),t._v(" 命令来查看我们编写的代码是否符合预期。那将是令人头痛的一件事，为了减少我们访问命令行的次数。我们可以通过给 VS Code 安装一个 "),s("code",[t._v("Eslint")]),t._v(" 插件来实现实时的 lint 结果反馈。")]),t._v(" "),s("h3",{attrs:{id:"安装-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("我们只需要在 VS Code 插件市场中安装 "),s("code",[t._v("Eslint")]),t._v(" 插件，安装完成之后重启一下 Vs code。重启之后你就会发现我们可以实时的观察到 "),s("code",[t._v("eslint")]),t._v(" 检查之后的结果（"),s("code",[t._v("Eslint")]),t._v(" 插件默认会读取当前项目中的配置文件完成该项目检查）")])])}),[],!1,null,null,null);s.default=n.exports}}]);