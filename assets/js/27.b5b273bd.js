(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{300:function(e,v,t){"use strict";t.r(v);var _=t(14),o=Object(_.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"_3-x-对比-2-x-的优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-x-对比-2-x-的优点"}},[e._v("#")]),e._v(" 3.x 对比 2.x 的优点")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("本章并不会列出所有 3.x 与 2.x 的区别，也没有必要。只会针对一些相对比较重要的变化进行说明。")])]),e._v(" "),v("h3",{attrs:{id:"源码管理方面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#源码管理方面"}},[e._v("#")]),e._v(" 源码管理方面")]),e._v(" "),v("p",[v("code",[e._v("vue 3.x")]),e._v(" 采用 monorepo 多包管理方式进行代码管理，将不同功能模块拆分成单独的包。每个独立包都拥有自己的单元测试和 "),v("code",[e._v("package.json")]),e._v("，包和包之间的依赖关系非常明确。便于阅读和维护，除此之外有些包可以独立于 "),v("code",[e._v("vue")]),e._v(" 单独使用，例如 "),v("code",[e._v("reactivity")]),e._v(" 就可以单独使用，当我们只想使用 "),v("code",[e._v("vue")]),e._v(" 的响应式模块时，这将非常有用的。")]),e._v(" "),v("h3",{attrs:{id:"运行性能方面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运行性能方面"}},[e._v("#")]),e._v(" 运行性能方面")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("vue 3.x")]),e._v(" 引入 "),v("code",[e._v("tree sharking")]),e._v("，对于使用到的 API 将不会被打包到线上，减少了代码体积")]),e._v(" "),v("li",[e._v("使用 Proxy 代替 Object.defineProperty，Proxy API 的性能是要比 Object.defineProperty 要高。此外，对于嵌套层级很深的对象，"),v("code",[e._v("vue 3.x")]),e._v(" 不会进行无脑代理，而是会在 "),v("code",[e._v("getter")]),e._v(" 中使用 Proxy，只有当这个对象被访问到时才会进行代理。")]),e._v(" "),v("li",[e._v("我们知道在 "),v("code",[e._v("vue 2.x")]),e._v(" 时组件更新时会 "),v("code",[e._v("diff")]),e._v(" 组件中所有节点，这种方式在遇到静态节点较多的组件时会做很多无用的 diff，"),v("code",[e._v("vue 3.x")]),e._v(" 为此对编译进行了优化，新增 "),v("code",[e._v("block tree")]),e._v("，它能将静态节点和动态节点隔离开来，区分出静态节点块和动态节点块。在组件更新时，"),v("code",[e._v("vue")]),e._v(" 只会 "),v("code",[e._v("diff")]),e._v(" 动态节点块。")])]),e._v(" "),v("h3",{attrs:{id:"开发方面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发方面"}},[e._v("#")]),e._v(" 开发方面")]),e._v(" "),v("ul",[v("li",[e._v("新增 "),v("code",[e._v("Composition API")]),e._v("，能够将一个功能涉及到的 data、computed、methods... 放到一个 hook 函数中，拥有更好的代码组织能力，在提高维护性和阅读性的同时，也大大提高了相同逻辑的复用性。")]),e._v(" "),v("li",[e._v("源码采用 "),v("code",[e._v("TypeScript")]),e._v(" 编写，对 ts 有很好的支持")]),e._v(" "),v("li",[e._v("Proxy 代替 Object.defineProperty，在修改响应式数据时无需使用特殊的 API 来触发响应式")])])])}),[],!1,null,null,null);v.default=o.exports}}]);