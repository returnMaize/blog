(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(t,n,s){"use strict";s.r(n);var a=s(14),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"深入理解-js-中的对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深入理解-js-中的对象"}},[t._v("#")]),t._v(" 深入理解 JS 中的对象")]),t._v(" "),n("blockquote",[n("p",[t._v("ECMA-262 第 5 版在定义只有内部才用的特性（attribute）时，描述了属性（property）的各种特征。 ECMA-262\n定义这些特性是为了实现 JavaScript 引擎用的，因此在 JavaScript 中不能直接访问它们。为了\n表示特性是内部值，该规范把它们放在了两对儿方括号中，例如[[Enumerable]]。")])]),t._v(" "),n("p",[t._v("以上是《红宝书》的原话。意思就是 ECMAScript 给对象属性定义了一些特性了，这些特性用来描述对象属性的特征。而这些特性是给 js 引擎用的，在 js 中不能直接访问，并且为了凸显这是内部值，把他们放到了双中括号中。")]),t._v(" "),n("p",[t._v("而 JS 中的对象中的属性其实分为两种属性：")]),t._v(" "),n("ul",[n("li",[t._v("一种是数据属性（对象字面量添加的属性就是数据属性）")]),t._v(" "),n("li",[t._v("另一种时访问器属性（需要使用特定的对象 API 才能定义）。")])]),t._v(" "),n("h2",{attrs:{id:"数据属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据属性"}},[t._v("#")]),t._v(" 数据属性")]),t._v(" "),n("p",[t._v("数据属性中的 4 个特性")]),t._v(" "),n("ul",[n("li",[t._v("[[Configurable]]: 能否通过 delete 操作符删除属性 能否修改属性的特性 能否修改成访问器属性（普通方式- 添加的属性该特性默认为 true 通过 defineProperty 方式定义的属性默认为 false）")]),t._v(" "),n("li",[t._v("[[Enumerable]]: 能否通过 for-in 遍历 （普通方式添加的属性该特性默认为 true 通过 defineProperty 方式定义的属性默认为 false）")]),t._v(" "),n("li",[t._v("[[Writable]]: 能否修改属性的值 （普通方式添加的属性该特性默认为 true 通过 defineProperty 方式定义的属性该特性默认为 false）")]),t._v(" "),n("li",[t._v("[[Value]]: 该属性的属性值 读取这个属性时读取的为这个值 修改改属性时 修改的也是这个值 默认为 undefined")])]),t._v(" "),n("p",[t._v("我们可以通过 Object.getOwnPropertyDescriptor API 来得知对象中属性具有的特性")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hjx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 输出结果\n{\n    configurable: true\n    enumerable: true\n    value: \"hjx\"\n    writable: true\n}\n\n结论：obj.name 是一个数据属性\n它具有以下特性：\n  1. 可操作\n  2. 可枚举\n  3. 值为 'hjx'\n  4. 可修改\n\n当我们通过 obj.name 访问一个数据属性的值时，js 引擎取得就是该属性的 [[value]] 特性\n */")]),t._v("\n")])])]),n("h2",{attrs:{id:"访问器属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问器属性"}},[t._v("#")]),t._v(" 访问器属性")]),t._v(" "),n("p",[t._v("访问器属性中的 4 个特性")]),t._v(" "),n("ul",[n("li",[t._v("[[Configurable]]: 是否可操作")]),t._v(" "),n("li",[t._v("[[Enumerable]]: 是否可枚举")]),t._v(" "),n("li",[t._v("[[Get]]: 默认 undefined")]),t._v(" "),n("li",[t._v("[[Set]]: 默认 undefined")])]),t._v(" "),n("p",[t._v("访问器属性的定义需要借助于 Object.defineProperty API")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hjx'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 输出结果\n{\n    configurable: false\n    enumerable: false\n    get: ƒ get()\n    set: undefined\n}\n\n当我们通过 obj.name 访问这个访问器属性的值时，js 引擎会调用 [[get]] 这个函数并将值返回\n */")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);